aspen-mesh-controlplane:
  # The name of the cluster where Aspen Mesh is being installed.
  clusterId: F5GCore

  userAuth:
    # type can be set to `jwt` or `none`. JWT authentication is highly recommended.
    type: none
    # If type is set to jwt, use the below parameters for configuration:
    jwt:
      # jwks (Required) - The URL for retrieving the Json Web Keys (JWKs) used for validating Json Web Tokens (JWTs).
      jwks: https://YOUR_DOMAIN/.well-known/jwks.json
      # redirectUrl (Required) - The URL that users should be redirected to if they're not logged in.
      redirectUrl: https://YOUR_DOMAIN/login
      # (Optional) - A comma delimited list of claims used for validating JWTs. Example "aud=aspenmesh.io,role=k8s.admin". Defaults to "aud=aspenmesh.io"
      #claims: aud=aspenmesh:io,role=k8s:admin

aspen-mesh-packet-inspector:
   enabled: true
   analysis:
     address: aspen-mesh-analysis-emulator.analysis-emulator:21000

aspen-mesh-secure-ingress:
  # enabled by default, which is highly recommended.
  enabled: true
  # Email to use for Let's Encrypt registration (used for certificate expiry notices)
  # Leave blank ("") if you wish to manage your own TLS certificates.
  lets-encrypt-email: ""
  # Enable external-dns management for Secure Ingress resources
  externalDnsEnabled: false

citadel:
   enabled: true

gateways:
  istio-ingressgateway:
    enabled: true
    type: ClusterIP
    debug: debug

  istio-egressgateway:
    enabled: true
    env:
      # Needed to route traffic via egress gateway if desired.
      ISTIO_META_REQUESTED_NETWORK_VIEW: "external"

global:
  certificateCustomFields: true
  proxy:
    accessLogEncoding: TEXT
    accessLogFile: /dev/stdout
    accessLogFormat: "{ \"authority\": \"%REQ(:AUTHORITY)%\", \"bytes_received\": %BYTES_RECEIVED%, \"bytes_sent\": %BYTES_SENT%, \"downstream_local_address\": \"%DOWNSTREAM_LOCAL_ADDRESS%\", \"downstream_peer_cert_v_end\": \"%DOWNSTREAM_PEER_CERT_V_END%\", \"downstream_peer_cert_v_start\": \"%DOWNSTREAM_PEER_CERT_V_START%\", \"downstream_remote_address\": \"%DOWNSTREAM_REMOTE_ADDRESS%\", \"downstream_tls_cipher\": \"%DOWNSTREAM_TLS_CIPHER%\", \"downstream_tls_version\": \"%DOWNSTREAM_TLS_VERSION%\", \"duration\": %DURATION%, \"hostname\": \"%HOSTNAME%\", \"istio_policy_status\": \"%DYNAMIC_METADATA(istio.mixer:status)%\", \"method\": \"%REQ(:METHOD)%\", \"path\": \"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\", \"protocol\": \"%PROTOCOL%\", \"request_duration\": %REQUEST_DURATION%, \"request_id\": \"%REQ(X-REQUEST-ID)%\", \"requested_server_name\": \"%REQUESTED_SERVER_NAME%\", \"response_code\": \"%RESPONSE_CODE%\", \"response_duration\": %RESPONSE_DURATION%, \"response_tx_duration\": %RESPONSE_TX_DURATION%, \"response_flags\": \"%RESPONSE_FLAGS%\", \"route_name\": \"%ROUTE_NAME%\", \"start_time\": \"%START_TIME%\", \"upstream_cluster\": \"%UPSTREAM_CLUSTER%\", \"upstream_host\": \"%UPSTREAM_HOST%\", \"upstream_local_address\": \"%UPSTREAM_LOCAL_ADDRESS%\", \"upstream_service_time\": %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%, \"upstream_transport_failure_reason\": \"%UPSTREAM_TRANSPORT_FAILURE_REASON%\", \"user_agent\": \"%REQ(USER-AGENT)%\", \"x_forwarded_for\": \"%REQ(X-FORWARDED-FOR)%\" } \n"

prometheus:
  enabled: true

jaeger:
  enabled: true
  
cassandra:
  enabled: true
  fullnameOverride: aspen-mesh-cassandra

external-dns:
  # enabled by default
  enabled: false
  aws:
    # Credentials secret for the IAM role that can access Route 53 for DNS
    # management. Only necessary if using external-dns management and not
    # using kube2iam, kiam, or EKS roles.
    credentials:
      secretName: YOUR_SECRET_NAME
  # Domain filter to limit the domains external-dns will attempt to create
  # records for. If set to .foo.bar.com, would limit to *.foo.bar.com
  domainFilter: ['YOUR_DOMAIN_SUFFIX']
  # Limits the hosted zones to which external-dns has access to update
  # records in Route 53
  zoneIdFilter: ['YOUR_ZONE_ID_HERE']

  #aspen-mesh-metrics-collector:
  #server:
  #  # (Optional) For configurations where PVCs are manually allocated
  #  persistentVolume:
  #    # Add the name of the manually created PVC. (e.g. aspen-mesh-metrics-collector)
  #    existingClaim: ['YOUR_PVC_NAME']
