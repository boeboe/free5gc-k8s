# istio CA watching all namespaces
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-citadel
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "security.name" . }}
    chart: {{ template "security.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    istio: citadel
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      istio: citadel
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingMaxSurge }}
      maxUnavailable: {{ .Values.rollingMaxUnavailable }}
  template:
    metadata:
      labels:
        app: {{ template "security.name" . }}
        chart: {{ template "security.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        istio: citadel
      annotations:
        sidecar.istio.io/inject: "false"
        {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: istio-citadel-service-account
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
      imagePullSecrets:
{{- range $.Values.global.imagePullSecrets }}
      - name: {{ . }}
{{- end }}
      containers:
        - name: citadel
{{- if contains "/" .Values.image }}
          image: "{{ .Values.image }}"
{{- else }}
          image: "{{ .Values.global.hub }}:{{ .Values.image }}-{{ .Values.global.tag }}"
{{- end }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          args:
            - --append-dns-names=true
            - --grpc-port=8060
            - --citadel-storage-namespace={{ .Release.Namespace }}
            - --custom-dns-names=istio-pilot-service-account.{{ .Release.Namespace }}:istio-pilot.{{ .Release.Namespace }},traffic-claim-enforcer-service-account.{{ .Release.Namespace }}:traffic-claim-enforcer-webhook.{{ .Release.Namespace }}.svc,aspen-mesh-secure-ingress.{{ .Release.Namespace }}:aspen-mesh-secure-ingress.{{ .Release.Namespace }}.svc{{ template "security.customDnsNames" . }}
            - --monitoring-port={{ .Values.monitoringPort }}
            - --self-signed-ca=false
            - --signing-cert=/etc/cacerts/ca-cert.pem
            - --signing-key=/etc/cacerts/ca-key.pem
            - --root-cert=/etc/cacerts/root-cert.pem
            - --cert-chain=/etc/cacerts/cert-chain.pem
          {{- if .Values.global.trustDomain }}
            - --trust-domain={{ .Values.global.trustDomain }}
          {{- end }}
            - --workload-cert-ttl={{ .Values.global.certificatesTTL.workloadCertTtl }}
            - --max-workload-cert-ttl={{ .Values.global.certificatesTTL.maxWorkloadCertTtl }}
          env:
            - name: CITADEL_SELF_SIGNED_CA_CERT_TTL
              value: "{{ .Values.global.certificatesTTL.selfSignedCACertTtl }}"
            {{- if $.Values.global.certificateCustomFields }}
            - name: CERTIFICATE_CUSTOM_FIELDS
              value: "{{ $.Values.global.certificateCustomFields }}"
            {{- end }}
            - name: JWT_POLICY
              value: {{ $.Values.global.jwtPolicy }}
            - name: CITADEL_ENABLE_NAMESPACES_BY_DEFAULT
              value: "{{ .Values.enableNamespacesByDefault }}"
            {{- if .Values.global.enableEccCertificates }}
            - name: ECC_SIGNATURE_ALGORITHM
              value: ECDSA
            {{- end }}
            {{- if .Values.env }}
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
          resources:
{{- if .Values.resources }}
{{ toYaml .Values.resources | indent 12 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 12 }}
{{- end }}
          volumeMounts:
          - name: cacerts
            mountPath: /etc/cacerts
            readOnly: true
      volumes:
      - name: cacerts
        secret:
         secretName: cacerts
         optional: true
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "podAntiAffinity" . | indent 6 }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
      {{- else if .Values.global.defaultTolerations }}
      tolerations:
{{ toYaml .Values.global.defaultTolerations | indent 6 }}
      {{- end }}
