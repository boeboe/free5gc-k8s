{{- if .Values.createMeshPolicy }}
apiVersion: v1
kind: ServiceAccount
{{- if .Values.global.imagePullSecrets }}
imagePullSecrets:
{{- range .Values.global.imagePullSecrets }}
  - name: {{ . }}
{{- end }}
{{- end }}
metadata:
  name: istio-security-post-install-account
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "security.name" . }}
    chart: {{ template "security.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-security-post-install-{{ .Release.Namespace }}
  labels:
    app: {{ template "security.name" . }}
    chart: {{ template "security.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
rules:
- apiGroups: ["authentication.istio.io"] # needed to create default authn policy
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["networking.istio.io"] # needed to create security destination rules
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations"]
  verbs: ["get"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
# This should be removed for 1.6
- apiGroups: ["security.istio.io"]
  resources: ["peerauthentications"]
  verbs: ["create", "get", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-security-post-install-role-binding-{{ .Release.Namespace }}
  labels:
    app: {{ template "security.name" . }}
    chart: {{ template "security.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-security-post-install-{{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: istio-security-post-install-account
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.global.tag | printf "istio-security-post-install-%v" | trunc 63 | lower }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app: {{ template "security.name" . }}
    chart: {{ template "security.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  template:
    metadata:
      name: istio-security-post-install
      labels:
        app: {{ template "security.name" . }}
        chart: {{ template "security.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-security-post-install-account
      imagePullSecrets:
{{- range .Values.global.imagePullSecrets }}
      - name: {{ . }}
{{- end }}
      containers:
        - name: kubectl
          image: "{{ .Values.global.hub }}:kubectl-{{.Values.global.tag }}"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash", "/tmp/security/run.sh", "/tmp/security/custom-resources.yaml" ]
          volumeMounts:
            - mountPath: "/tmp/security"
              name: tmp-configmap-security
      volumes:
        - name: tmp-configmap-security
          configMap:
            name: istio-security-custom-resources
      restartPolicy: OnFailure
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
      {{- else if .Values.global.defaultTolerations }}
      tolerations:
{{ toYaml .Values.global.defaultTolerations | indent 6 }}
      {{- end }}
{{- end }}
